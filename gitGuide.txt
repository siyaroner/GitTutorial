#################################################################################################
-------------git --help ---------------								#									
usage: git [-v | --version] [-h | --help] [-C <path>] [-c <name>=<value>]			#
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]			#
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]			#		
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]				#
           [--super-prefix=<path>] [--config-env=<name>=<envvar>]				#
           <command> [<args>]									#
												#
These are common Git commands used in various situations:					#					
start a working area (see also: git help tutorial)						#					
   clone     Clone a repository into a new directory						#					
   init      Create an empty Git repository or reinitialize an existing one			#		
												#							
work on the current change (see also: git help everyday)					#					
   add       Add file contents to the index							#			
   mv        Move or rename a file, a directory, or a symlink					#								
   restore   Restore working tree files								#				
   rm        Remove files from the working tree and from the index				#					
												#								
examine the history and state (see also: git help revisions)					#								
   bisect    Use binary search to find the commit that introduced a bug				#						
   diff      Show changes between commits, commit and working tree, etc				#																					#			
   grep      Print lines matching a pattern							#																					#									
   log       Show commit logs									#		
   show      Show various types of objects							#				
   status    Show the working tree status							#	
												#		
grow, mark and tweak your common history							#						
   branch    List, create, or delete branches							#									
   commit    Record changes to the repository							#				
   merge     Join two or more development histories together					#		
   rebase    Reapply commits on top of another base tip						#						
   reset     Reset current HEAD to the specified state						#			
   switch    Switch branches									#					
   tag       Create, list, delete or verify a tag object signed with GPG			#			
												#					
collaborate (see also: git help workflows)							#					
   fetch     Download objects and refs from another repository					#																					#
   pull      Fetch from and integrate with another repository or a local branch			#							
   push      Update remote refs along with associated objects					#						
												#									
'git help -a' and 'git help -g' list available subcommands and some				#								
concept guides. See 'git help <command>' or 'git help <concept>'				#									
to read about a specific subcommand or concept.							#					
See 'git help git' for an overview of the system.						#					
												#									
#################################################################################################						
----------------- with powershell-------------------------------------------------
----- adding file/s
- to change disk
cd /d D:

- to change directory
cd -add here the directory address that you want-

-git initialize
git init

-create .ssh directory
mkdir .ssh

-go to .ssh directory
cd .ssh

- generate ssh key
ssh-keygen.exe  or (ssh-keygen -t rsa -b 4096 -C "email@example.com") ## -t for encryption type, -b for strength of encryption

- to see ssh key that generated 
cat -your addres here-\.ssh\id_rsa.pub

-go back the first directory
cd ..
-create user name
git config --global user.name "your name"

-create email address
git config --global user.email "your email address"

-next step
git config --global push.default matching

-next step
git config --global alias.co checkout

## then go to github get ssh/http etc address

-select which file/s will be adding
git add . or file1 file2 etc.   (. means select all files in that directory)

-commit process
git commit -m "message here"

-select branch
git branch -M main

-select repository via ssh/http/github cli
git remote add origin -ssh/http/github cli-

-push file/s
git push -u origin main


------deleting file/s from github-----------

-select file/s (if it has modification use git rm --cached filename)
git rm filename

-commit process
git commit -m "message"

-select branch
git branch -M main

- select repository via ssh/http/github cli
git remote rm origin -ssh/http/github cli-


------updating/restore file/s from github-----------

-select file/s (if it has modification use git rm --cached filename)
git restore filename

-commit process
git commit -m "message"


- select repository via ssh/http/github cli
git remote restore origin -ssh/http/github cli-


-----------------------------pull/clone from github------------------------------

git clone ssh/http/github cli

---------------------- creating new branch-----------
-to see which branch are you on
git branch or git status

-to create new branch
git checkout -b feature-gitGuide-update


-select branch
git branch -M main

-to select branch you want to change
git chekout main/feature-gitGuide-update etc.
































